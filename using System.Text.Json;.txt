using System.Text.Json;
using System.Threading.Tasks;
using Microsoft.Extensions.Logging;

public class QueueProcessorService
{
    private readonly ApplicationDbContext _context;
    private readonly MsmqService _msmqService;
    private readonly ILogger<QueueProcessorService> _logger;

    public QueueProcessorService(ApplicationDbContext context, MsmqService msmqService, ILogger<QueueProcessorService> logger)
    {
        _context = context;
        _msmqService = msmqService;
        _logger = logger;
    }

    public async Task ProcessQueue()
    {
        var message = _msmqService.ReceiveMessage();
        if (message == null)
        {
            _logger.LogInformation("No messages in the queue.");
            return;
        }

        var request = JsonSerializer.Deserialize<QueueRequest>(message);

        var user = _context.Users.Find(request.CustomerId);
        if (user == null)
        {
            _logger.LogWarning($"User with ID {request.CustomerId} not found.");
            return;
        }

        _logger.LogInformation($"Processing {request.ServiceType} request for {user.Name}, Account: {user.AccountNumber}, Amount: {request.Amount}");

        // Simulate processing time
        await Task.Delay(60000); // 1 minute

        _logger.LogInformation($"{request.ServiceType} request processed for {user.Name}, Account: {user.AccountNumber}");
    }

    public void AddToQueue(int customerId, string serviceType, decimal amount)
    {
        var user = _context.Users.Find(customerId);
        if (user == null)
        {
            _logger.LogWarning($"User with ID {customerId} not found.");
            return;
        }

        var queueRequest = new QueueRequest
        {
            ServiceType = serviceType,
            CustomerId = customerId,
            Amount = amount,
            AccountNumber = user.AccountNumber
        };

        var message = JsonSerializer.Serialize(queueRequest);
        _msmqService.SendMessage(message);

        _logger.LogInformation($"Added {serviceType} request for {user.Name} to the queue.");
    }
}
